// Generated by cpp11: do not edit by hand
// clang-format off


#include "cpp11/declarations.hpp"
#include <R_ext/Visibility.h>

// sens.cpp
cpp11::list sens_(const cpp11::doubles & e, const cpp11::doubles & lwr, const cpp11::doubles & upr, const cpp11::doubles & lwr_iter, const cpp11::doubles & upr_iter, const cpp11::integers & grp, const cpp11::logicals & a, const double epsilon, const double eta, const int m, const int chunk_size, const int num_threads);
extern "C" SEXP _rar_sens_(SEXP e, SEXP lwr, SEXP upr, SEXP lwr_iter, SEXP upr_iter, SEXP grp, SEXP a, SEXP epsilon, SEXP eta, SEXP m, SEXP chunk_size, SEXP num_threads) {
  BEGIN_CPP11
    return cpp11::as_sexp(sens_(cpp11::as_cpp<cpp11::decay_t<const cpp11::doubles &>>(e), cpp11::as_cpp<cpp11::decay_t<const cpp11::doubles &>>(lwr), cpp11::as_cpp<cpp11::decay_t<const cpp11::doubles &>>(upr), cpp11::as_cpp<cpp11::decay_t<const cpp11::doubles &>>(lwr_iter), cpp11::as_cpp<cpp11::decay_t<const cpp11::doubles &>>(upr_iter), cpp11::as_cpp<cpp11::decay_t<const cpp11::integers &>>(grp), cpp11::as_cpp<cpp11::decay_t<const cpp11::logicals &>>(a), cpp11::as_cpp<cpp11::decay_t<const double>>(epsilon), cpp11::as_cpp<cpp11::decay_t<const double>>(eta), cpp11::as_cpp<cpp11::decay_t<const int>>(m), cpp11::as_cpp<cpp11::decay_t<const int>>(chunk_size), cpp11::as_cpp<cpp11::decay_t<const int>>(num_threads)));
  END_CPP11
}

extern "C" {
/* .Call calls */
extern SEXP run_testthat_tests(SEXP);

static const R_CallMethodDef CallEntries[] = {
    {"_rar_sens_",         (DL_FUNC) &_rar_sens_,         12},
    {"run_testthat_tests", (DL_FUNC) &run_testthat_tests,  1},
    {NULL, NULL, 0}
};
}

extern "C" attribute_visible void R_init_rar(DllInfo* dll){
  R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
  R_useDynamicSymbols(dll, FALSE);
  R_forceSymbols(dll, TRUE);
}
